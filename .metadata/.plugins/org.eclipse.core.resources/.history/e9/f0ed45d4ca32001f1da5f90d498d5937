package com.java.crime;

import java.io.Serializable;
import java.sql.Date;
import java.text.SimpleDateFormat;

import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

public class VictimDaoImpl implements VictimDao,Serializable {
	private SessionFactory sessionFactory;

	@Override
	public List<Victims> showVictimDao() {
		sessionFactory = SessionHelper.getConnection();
		Session session = sessionFactory.openSession();
		List<Victims> victimList = null;
		try {
			Query query = session.createQuery("from Victims");
			victimList = query.list();
		} finally {
			session.close();
		}
		return victimList;
	}

	@Override
	public Victims searchVictimDao(int victimId) {
		sessionFactory = SessionHelper.getConnection();
		Session session = sessionFactory.openSession();
		Victims victims = null;
		try {
			Query query = session.createQuery("from Victims where victimId = " + victimId);
			query.setParameter("victimId", victimId);
			victims = (Victims) query.uniqueResult();
		} finally {
			session.close();
		}
		return victims;
	}

	@Override
	public String updateVictimDao(Victims victimUpdated) {
		sessionFactory = SessionHelper.getConnection();
		Session session = sessionFactory.openSession();
		Transaction trans = session.beginTransaction();
		try {
			session.saveOrUpdate(victimUpdated);
			trans.commit();
		} finally {
			session.close();
		}
		return "Victim Record Updated...";
	}

	@Override
	public String addVictimDao(Victims victimNew) {
		sessionFactory = SessionHelper.getConnection();
		Session session = sessionFactory.openSession();
		Transaction trans = session.beginTransaction();
		try {
			session.saveOrUpdate(victimNew);
			trans.commit();
		} finally {
			session.close();
		}
		return "Victim Record Inserted...";
	}

	@Override
	public String deleteVictimDao(int victimId) {
		Victims victimFound = searchVictimDao(victimId);
		sessionFactory = SessionHelper.getConnection();
		Session session = sessionFactory.openSession();
		Transaction trans = session.beginTransaction();
		try {
			session.delete(victimFound);
			trans.commit();
		} finally {
			session.close();
		}
		return "Victim Record Deleted...";
	}

	@Override
	public String getFormattedDate(Date date) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		return sdf.format(date);
	}
}
